basePath: /
consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  Book:
    description: Book (default view)
    example:
      author: Hic tenetur ut.
      name: Harum ratione.
      userId: 1.3157771646406797e+18
    properties:
      author:
        example: Hic tenetur ut.
        type: string
      name:
        example: Harum ratione.
        type: string
      userId:
        example: 1.3157771646406797e+18
        format: int64
        type: integer
    required:
    - userId
    - name
    - author
    title: 'Mediatype identifier: application/vnd.book+json; view=default'
    type: object
  BookCollection:
    description: BookCollection is the media type for an array of Book (default view)
    example:
    - author: Hic tenetur ut.
      name: Harum ratione.
      userId: 1.3157771646406797e+18
    - author: Hic tenetur ut.
      name: Harum ratione.
      userId: 1.3157771646406797e+18
    - author: Hic tenetur ut.
      name: Harum ratione.
      userId: 1.3157771646406797e+18
    items:
      $ref: '#/definitions/Book'
    title: 'Mediatype identifier: application/vnd.book+json; type=collection; view=default'
    type: array
  BookPayload:
    example:
      author: Cum amet sed.
      name: Impedit facilis suscipit amet cum numquam.
      userId: 1.4134025174114424e+18
    properties:
      author:
        example: Cum amet sed.
        type: string
      name:
        example: Impedit facilis suscipit amet cum numquam.
        type: string
      userId:
        example: 1.4134025174114424e+18
        format: int64
        type: integer
    required:
    - userId
    - name
    - author
    title: BookPayload
    type: object
  User:
    description: User (default view)
    example:
      city: Numquam consequatur aliquam iure non culpa sed.
      email: Nihil saepe et quia.
      name: Est quas repudiandae.
      userId: 8.759870265339155e+18
    properties:
      city:
        example: Numquam consequatur aliquam iure non culpa sed.
        type: string
      email:
        example: Nihil saepe et quia.
        type: string
      name:
        example: Est quas repudiandae.
        type: string
      userId:
        example: 8.759870265339155e+18
        format: int64
        type: integer
    required:
    - userId
    - name
    - email
    title: 'Mediatype identifier: application/vnd.user+json; view=default'
    type: object
  UserCollection:
    description: UserCollection is the media type for an array of User (default view)
    example:
    - city: Numquam consequatur aliquam iure non culpa sed.
      email: Nihil saepe et quia.
      name: Est quas repudiandae.
      userId: 8.759870265339155e+18
    - city: Numquam consequatur aliquam iure non culpa sed.
      email: Nihil saepe et quia.
      name: Est quas repudiandae.
      userId: 8.759870265339155e+18
    items:
      $ref: '#/definitions/User'
    title: 'Mediatype identifier: application/vnd.user+json; type=collection; view=default'
    type: array
  UserPayload:
    example:
      city: Aspernatur et numquam aut et similique consectetur.
      email: Aut ratione praesentium asperiores dolor.
      name: Iusto pariatur sequi adipisci eius temporibus.
      userId: 1.6316531384055823e+18
    properties:
      city:
        example: Aspernatur et numquam aut et similique consectetur.
        type: string
      email:
        example: Aut ratione praesentium asperiores dolor.
        type: string
      name:
        example: Iusto pariatur sequi adipisci eius temporibus.
        type: string
      userId:
        example: 1.6316531384055823e+18
        format: int64
        type: integer
    required:
    - userId
    - name
    - email
    - city
    title: UserPayload
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609066e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609066e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
host: localhost:8080
info:
  description: A simple appengine example
  title: The appengine example
  version: ""
paths:
  /books:
    get:
      description: list
      operationId: Book#list
      produces:
      - application/vnd.book+json; type=collection
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: list Book
      tags:
      - Book
    post:
      description: create
      operationId: Book#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/BookPayload'
      produces:
      - application/vnd.book+json
      - application/vnd.goa.error
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: create Book
      tags:
      - Book
  /books/{name}:
    delete:
      description: delete
      operationId: Book#delete
      parameters:
      - in: path
        name: name
        required: true
        type: string
      produces:
      - application/vnd.book+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: delete Book
      tags:
      - Book
    get:
      description: show
      operationId: Book#show
      parameters:
      - in: path
        name: name
        required: true
        type: string
      produces:
      - application/vnd.book+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: show Book
      tags:
      - Book
    put:
      operationId: Book#update
      parameters:
      - in: path
        name: name
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/BookPayload'
      produces:
      - application/vnd.book+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: update Book
      tags:
      - Book
  /users:
    get:
      description: list
      operationId: User#list
      produces:
      - application/vnd.goa.error
      - application/vnd.user+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: list User
      tags:
      - User
    post:
      description: create
      operationId: User#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UserPayload'
      produces:
      - application/vnd.goa.error
      - application/vnd.user+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: create User
      tags:
      - User
  /users/{userId}:
    delete:
      description: delete
      operationId: User#delete
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      - application/vnd.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: delete User
      tags:
      - User
    get:
      description: show
      operationId: User#show
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      - application/vnd.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: show User
      tags:
      - User
    put:
      operationId: User#update
      parameters:
      - in: path
        name: userId
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UserPayload'
      produces:
      - application/vnd.goa.error
      - application/vnd.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: update User
      tags:
      - User
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
schemes:
- http
swagger: "2.0"
